<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PasswordProtectorEditor</name>
    </assembly>
    <members>
        <member name="T:PasswordProtectorEditor.PasswordProtectDrawer">
            <summary>
            Draws text field in a password protected format.
            <para>This property drawer works with the property attribute PasswordProtectAttribute.</para>
            </summary>
        </member>
        <member name="T:PasswordProtectorEditor.PasswordProtectDrawer.FieldDrawer`1">
            <summary>
            Delegate to define how the property is drawn.
            </summary>
            <typeparam name="T">Type to be parsed into by the parser.</typeparam>
            <param name="position">A 2D Rectangle defined by x, y position and width, height.</param>
            <param name="value">Value to be modified.</param>
            <returns>Value after modification changed or not.</returns>
        </member>
        <member name="T:PasswordProtectorEditor.PasswordProtectDrawer.TryParser`1">
            <summary>
            Parser the string value from the password field into the type specified
            </summary>
            <typeparam name="T">Type to be parsed into by the parser.</typeparam>
            <param name="value">String password value to be parsed.</param>
            <param name="result">Typed value after parsing, if parse was successful.</param>
            <returns>True if parse was successful false if not</returns>
        </member>
        <member name="F:PasswordProtectorEditor.PasswordProtectDrawer.VisibilityGUIContent">
            <summary>
            Checkbox tooltip to inform of visibility action.
            </summary>
        </member>
        <member name="M:PasswordProtectorEditor.PasswordProtectDrawer.FieldDisplay``1(UnityEngine.Rect,``0,UnityEngine.GUIContent,PasswordProtector.PasswordProtectAttribute,PasswordProtectorEditor.PasswordProtectDrawer.FieldDrawer{``0},PasswordProtectorEditor.PasswordProtectDrawer.TryParser{``0})">
            <summary>
            Draws a property to display the field value
            </summary>
            <typeparam name="T">Type to be returned by the field.</typeparam>
            <param name="position">A 2D Rectangle defined by x, y position and width, height.</param>
            <param name="value">Value of the field is stored here.</param>
            <param name="label">The label contains the name of the field.</param>
            <param name="passAttr">The property attribute set in the runtime class.</param>
            <param name="fieldDrawer">Function to draw the inspector field, usually one of the EditorGUI static methods, TextField or PasswordField</param>
            <param name="parser">Parser to use for the output value.
            <para>ie. TryParseString(string, out string) and int.TryParse</para></param>
            <returns>Value from the drawer</returns>
        </member>
        <member name="M:PasswordProtectorEditor.PasswordProtectDrawer.TryParseString(System.String,System.String@)">
            <summary>
            Parse function to supply the delegate for the FieldDisplay method.
            <para>NOTE: This function always returns true</para>
            </summary>
            <param name="value">String password value to be parsed.</param>
            <param name="result">Typed value after parsing, if parse was successful.</param>
            <returns>True if parse was successful false if not</returns>
        </member>
        <member name="M:PasswordProtectorEditor.PasswordProtectDrawer.OnGUI(UnityEngine.Rect,UnityEditor.SerializedProperty,UnityEngine.GUIContent)">
            <summary>
            OnGUI is called for rendering and handling GUI events.
            <para>The actual property drawing takes place here.</para>
            </summary>
            <param name="position">A 2D Rectangle defined by x, y position and width, height.</param>
            <param name="property">Property passed in the value of the field is stored here.</param>
            <param name="label">The label contains the name of the field.</param>
        </member>
        <member name="M:PasswordProtectorEditor.PasswordProtectDrawer.UnsupportedType(UnityEngine.Rect,UnityEngine.Object,System.Boolean)">
            <summary>
            Displays notice when the property attribute is attached to an incompatible type.
            </summary>
            <param name="rect">A 2D Rectangle defined by x, y position and width, height.</param>
            <param name="target">Target object where the property field is declared.</param>
            <param name="debugLogError">If true the unsupported error will be logged to the console.</param>
        </member>
    </members>
</doc>
